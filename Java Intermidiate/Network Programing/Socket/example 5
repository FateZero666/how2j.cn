package com.company;


import javax.swing.*;
import javax.swing.plaf.basic.BasicArrowButton;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Random;

class Server{

    public void send(String ip, int port, String st) {
        try{
            Socket s = new Socket(ip, port);

            OutputStream os = s.getOutputStream();
            DataOutputStream dos = new DataOutputStream(os);
            dos.writeUTF(st);
            System.out.println("服务器发送信息:" + st);
            dos.close();
            s.close();
        }catch (UnknownHostException e){
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

}

class Client {

    public void receive(int port){
        try{
            ServerSocket ss = new ServerSocket(port);

            Socket s = ss.accept();

            InputStream is = s.getInputStream();

            DataInputStream dis = new DataInputStream(is);
            String msg = dis.readUTF();
            System.out.println("客户端收到服务信息:" + msg);
            dis.close();
            s.close();
            ss.close();
        }catch (IOException e) {
            e.printStackTrace();
        }

    }
}

public class Main {

    private static String randomString(int length) {
        char[] c = new char[length];

        for(int i = 0; i < length; ++i) {
            int seed = 0;
            do{
               seed =  48 + (int)(75 * Math.random());
            }while ((seed > 57 && seed < 65 || seed > 90 && seed < 97));
            c[i] = (char) seed;
        }

        return String.valueOf(c);
    }

    public static void main(String[] args) throws UnknownHostException{

        InetAddress host = InetAddress.getLocalHost();
        String ip = host.getHostAddress();
        final int targetPort = 9999;

        Thread t1 = new Thread(){
            public void run() {
                while(true) {
                    Random r = new Random();
                    String msg = Main.randomString(1 + r.nextInt(5));
                    Server sv = new Server();
                    sv.send(ip, targetPort, msg);
                    try{
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        t1.start();

        Thread t2 = new Thread() {
            public void run() {
                while(true){
                    Client cl = new Client();
                    cl.receive(targetPort);
                    try{
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        t2.start();

    }

}
